/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package demo.view;

import demo.dao.DBConnect;
import demo.model.ChiTietNhap;
import demo.model.GlobalData;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.sql.Date;
import java.time.LocalDateTime;
import java.util.Calendar;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MY PC
 */
public class NhapKhoJFrameCreat extends javax.swing.JFrame {

    private List<ChiTietNhap> list = new ArrayList<>();
    private List listmahh = new ArrayList<>();
    private List listdvt = new ArrayList<>();
    private DefaultTableModel t = new DefaultTableModel();
    /**
     * Creates new form NewJFrame
     */
    public NhapKhoJFrameCreat() {
        initComponents();
        setTitle("Tạo hóa đơn nhập");
//        initNv();
        initHh();
        initTable();    
        jtfManhap.setText(setID());
        jtfManv.setText(GlobalData.getId());
        jtfManv.setEditable(false);
        jtfMahh.setEditable(false);
        jtfDonvitinh.setEditable(false);
        jtfNgayNhap.setDate(Calendar.getInstance().getTime());
        setDefaultCloseOperation(this.DO_NOTHING_ON_CLOSE);
    }

//    private void initNv() {
//            Connection cons = DBConnect.getConnection();
//            try {
//                String sql = "select Manv,Hoten from nhanvien";
//                PreparedStatement ps = cons.prepareCall(sql);
//                ResultSet rs = ps.executeQuery();
//                jcbManv.removeAllItems();
//                while(rs.next()) {
//                    jcbManv.addItem(rs.getString("manv"));
//                }
//                rs.close();
//                ps.close();
//                cons.close();
//                
//            } catch (Exception e) {
//                JOptionPane.showMessageDialog(this, e.getMessage());
//                e.printStackTrace();
//            }
//    }
        private void initHh() {       
            Connection cons = DBConnect.getConnection();
            try {
                String sql = "select Mahh, Tenhh from hanghoa";
                PreparedStatement ps = cons.prepareCall(sql);
                ResultSet rs = ps.executeQuery();
                jcbTenhh.removeAllItems();
                while(rs.next()) {
                    jcbTenhh.addItem(rs.getString("Tenhh"));
                }              
                rs.close();
                ps.close();
                cons.close();
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
                e.printStackTrace();
            }
    }
     
        private void initTable() {
            String[] column =  new String[]{"Mã nhập","Mã hàng hóa","Số lô","Số lượng"};
            t.setColumnIdentifiers(column);
            jtbChitiet.setModel(t);
        }
            
        private void fillTable() {
            t.setRowCount(0);
            for(ChiTietNhap ctn :list){
                t.addRow(new String[]{ctn.getManhap(),ctn.getMahh(),ctn.getSolo(),Integer.toString(ctn.getSoluong())});
            }
            t.fireTableDataChanged();
        }
        
        private String setID() {
            LocalDateTime now = LocalDateTime.now();  
            String id = ("N"+now.getDayOfMonth()+""+now.getMonthValue()+""+now.getHour()+""+now.getMinute()+""+now.getSecond());
            return id;
        }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbChitiet = new javax.swing.JTable();
        jbtSave = new javax.swing.JButton();
        jbtAdd = new javax.swing.JButton();
        jbtUpdate = new javax.swing.JButton();
        jbtDelete = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtfNgayNhap = new com.toedter.calendar.JDateChooser();
        jtfManhap = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtfBengui = new javax.swing.JTextArea();
        jtfManv = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jcbTenhh = new javax.swing.JComboBox<>();
        jtfSolo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jtfSoluong = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jtfMahh = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jtfDonvitinh = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jtbChitiet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtbChitiet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbChitietMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbChitiet);

        jbtSave.setText("Save");
        jbtSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSaveActionPerformed(evt);
            }
        });

        jbtAdd.setText("Add");
        jbtAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtAddActionPerformed(evt);
            }
        });

        jbtUpdate.setText("Update");
        jbtUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtUpdateActionPerformed(evt);
            }
        });

        jbtDelete.setText("Delete");
        jbtDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtDeleteActionPerformed(evt);
            }
        });

        jButton1.setText("Close");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Hóa đơn nhập", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 51, 51))); // NOI18N

        jLabel1.setText("Mã nhập kho");

        jLabel2.setText("Ngày nhập");

        jLabel3.setText("Mã nhân viên");

        jLabel4.setText("Bên gửi");

        jtfBengui.setColumns(20);
        jtfBengui.setRows(5);
        jScrollPane3.setViewportView(jtfBengui);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfManhap, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfNgayNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3)
                    .addComponent(jtfManv))
                .addGap(38, 38, 38))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfManhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jtfNgayNhap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfManv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chi tiết hóa đơn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 51, 51))); // NOI18N

        jLabel6.setText("Số lô");

        jLabel5.setText("Chọn hàng hóa");

        jcbTenhh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbTenhh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbTenhhActionPerformed(evt);
            }
        });

        jLabel7.setText("Số lượng");

        jLabel8.setText("Mã hàng hóa");

        jLabel9.setText("Đơn vị tính");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jtfSoluong))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jtfMahh, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jtfDonvitinh, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jtfSolo)
                            .addComponent(jcbTenhh, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbTenhh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtfMahh)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 2, Short.MAX_VALUE)
                        .addComponent(jtfDonvitinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfSolo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfSoluong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(89, 89, 89))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jbtAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbtUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbtDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbtSave, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(14, 14, 14)))
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtSave)
                    .addComponent(jbtAdd)
                    .addComponent(jbtUpdate)
                    .addComponent(jbtDelete))
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtAddActionPerformed
        // TODO add your handling code here:
        ChiTietNhap ctn = new ChiTietNhap();
        if(jtfManhap.getText().length() == 0 || jtfBengui.getText().length() == 0 || jtfSolo.getText().length() == 0 || jtfSoluong.getText().length() == 0){
            JOptionPane.showMessageDialog(this, "Chưa điền đầy đủ thông tin!", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else{
            ctn.setManhap(jtfManhap.getText());
            ctn.setNgaynhap(jtfNgayNhap.getDate());
            ctn.setManv(jtfManv.getText());
            ctn.setBengui(jtfBengui.getText());
            ctn.setMahh(jtfMahh.getText());
            ctn.setSolo(jtfSolo.getText());
            ctn.setSoluong(Integer.valueOf(jtfSoluong.getText()));
            list.add(ctn);
            fillTable();
            jtfSoluong.setText("");
            jtfSolo.setText("");
        }        
//        System.out.println(list);          
    }//GEN-LAST:event_jbtAddActionPerformed

    private void jbtSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSaveActionPerformed
        if(jtfManhap.getText().length() == 0 || jtfBengui.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Không thể lưu dữ liệu, vui lòng kiểm tra lại", "Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            int select = JOptionPane.showConfirmDialog(this, "Save Change ?", "Warning", JOptionPane.YES_NO_OPTION);
            if(select == JOptionPane.NO_OPTION){
                return;
            }
            else{
                try {
                    Connection cons = DBConnect.getConnection();
                    String sqlchitiet = "INSERT INTO chitietnhap(manhap, mahh, solo, soluong) VALUES(?, ?, ?, ?)";
                    String sql = "INSERT INTO hoadonnhap(manhap, ngaynhap, manv, bengui) VALUES(?, ?, ?, ?)";                   
                    String sqlupdate = "update hanghoa set soluong = soluong + ? where mahh = ?";
                    PreparedStatement ps = cons.prepareStatement(sqlchitiet);
                    PreparedStatement ps2 = cons.prepareStatement(sql);
                    PreparedStatement ps3 = cons.prepareStatement(sqlupdate);
                    for(ChiTietNhap ctn: list) {
                        ps2.setString(1, ctn.getManhap());
                        ps2.setDate(2, new Date(ctn.getNgaynhap().getTime()));
                        ps2.setString(3, ctn.getManv());
                        ps2.setString(4, ctn.getBengui());
                    } 
                    ps2.execute();
                    for(ChiTietNhap ctn: list) {
                        ps.setString(1, ctn.getManhap());
                        ps.setString(2, ctn.getMahh());
                        ps.setString(3, ctn.getSolo());
                        ps.setString(4, Integer.toString(ctn.getSoluong())); 
                        ps.execute();
                    } 
                    for(ChiTietNhap ctn: list) {
                        ps3.setString(1, Integer.toString(ctn.getSoluong()));
                        ps3.setString(2, ctn.getMahh());
                        ps3.execute();
                    }
                    
                    ps3.close();
                    ps2.close();
                    ps.close();
                    cons.close();

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage());
                    e.printStackTrace();
                }
                JOptionPane.showMessageDialog(this, "Đã lưu vào CSDL!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                dispose();
            }
        }
            
    }//GEN-LAST:event_jbtSaveActionPerformed

    private void jtbChitietMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbChitietMouseClicked
        // TODO add your handling code here:
        int selectRow = jtbChitiet.getSelectedRow();
//        System.out.println(selectRow);
        if(selectRow >= 0){
            String id = (String) jtbChitiet.getValueAt(selectRow, 1);
                for(ChiTietNhap ctn: list) {
                    if(id.equals(ctn.getMahh())){
                        jtfMahh.setText(ctn.getMahh());
                        jcbTenhh.setSelectedIndex(listmahh.indexOf(jtfMahh.getText()));
                        jtfSolo.setText(ctn.getSolo());
                        jtfSoluong.setText(Integer.toString(ctn.getSoluong()));
                        break;
                    }
                }   
        }     
    }//GEN-LAST:event_jtbChitietMouseClicked

    private void jbtUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtUpdateActionPerformed
        
        if(jtfManhap.getText().length() == 0 || jtfBengui.getText().length() == 0 || jtfSolo.getText().length() == 0 || jtfSoluong.getText().length() == 0){
            JOptionPane.showMessageDialog(this, "Chưa điền đầy đủ thông tin!", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else{
        int  choice = JOptionPane.showConfirmDialog(this, "Bạn có muốn cập nhật giá trị?","Warning",JOptionPane.YES_NO_OPTION);
            if(choice == JOptionPane.NO_OPTION){
                return;
            }
            else{
                for(ChiTietNhap ctn:list){
                    if(ctn.getMahh().equals(jtfMahh.getText())){
                    ctn.setMahh(jtfMahh.getText());                   
                    ctn.setSolo(jtfSolo.getText());
                    ctn.setSoluong(Integer.valueOf(jtfSoluong.getText()));
                    break;
            }
        }
        fillTable();
        }
        }
    }//GEN-LAST:event_jbtUpdateActionPerformed

    private void jbtDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtDeleteActionPerformed
        if(jtfManhap.getText().length() == 0 || jtfBengui.getText().length() == 0 || jtfSolo.getText().length() == 0 || jtfSoluong.getText().length() == 0){
            JOptionPane.showMessageDialog(this, "Chưa điền đầy đủ thông tin!", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else{
        int  choice = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa giá trị?","Warning",JOptionPane.YES_NO_OPTION);
            if(choice == JOptionPane.NO_OPTION){
                return;
            }
            else{
                for(ChiTietNhap ctn:list){
                    if(ctn.getMahh().equals(jtfMahh.getText())){
                    list.remove(ctn);
                    break;
            }
        }
        fillTable();
        }
        }
    }//GEN-LAST:event_jbtDeleteActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jcbTenhhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbTenhhActionPerformed
        // TODO add your handling code here:
        int c = jcbTenhh.getSelectedIndex();
//        System.out.println(c);
        Connection cons = DBConnect.getConnection();
            try {
                String sql = "select Mahh, Donvitinh from hanghoa";
                PreparedStatement ps = cons.prepareCall(sql);
                ResultSet rs = ps.executeQuery();
                while(rs.next()) {
                    listmahh.add(rs.getString("mahh"));
                    listdvt.add(rs.getString("donvitinh"));
                }  
                rs.close();
                ps.close();
                cons.close();                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
                e.printStackTrace();
            }
        if(c<0){
            jtfMahh.setText("");
            jtfDonvitinh.setText("");
        }
        else{
            jtfMahh.setText(listmahh.get(c).toString());
            jtfDonvitinh.setText(listdvt.get(c).toString());
        }
        
    }//GEN-LAST:event_jcbTenhhActionPerformed
    
    
    
    
    /**
     * @param args the command line arguments
     */
    
    
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NhapKhoJFrameCreat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NhapKhoJFrameCreat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NhapKhoJFrameCreat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NhapKhoJFrameCreat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NhapKhoJFrameCreat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton jbtAdd;
    private javax.swing.JButton jbtDelete;
    private javax.swing.JButton jbtSave;
    private javax.swing.JButton jbtUpdate;
    private javax.swing.JComboBox<String> jcbTenhh;
    private javax.swing.JTable jtbChitiet;
    private javax.swing.JTextArea jtfBengui;
    private javax.swing.JTextField jtfDonvitinh;
    private javax.swing.JTextField jtfMahh;
    private javax.swing.JTextField jtfManhap;
    private javax.swing.JTextField jtfManv;
    private com.toedter.calendar.JDateChooser jtfNgayNhap;
    private javax.swing.JTextField jtfSolo;
    private javax.swing.JTextField jtfSoluong;
    // End of variables declaration//GEN-END:variables
}
